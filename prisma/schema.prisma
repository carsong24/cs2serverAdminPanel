generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model players {
  player_id  Int       @id @default(autoincrement())
  steam_id   String    @unique @db.VarChar(20)
  username   String    @db.VarChar(100)
  score      Int?      @default(0)
  kills      Int?      @default(0)
  deaths     Int?      @default(0)
  assists    Int?      @default(0)
  join_time  DateTime? @default(now()) @db.Timestamp(6)
  leave_time DateTime? @db.Timestamp(6)

  @@index([steam_id], map: "idx_player_steam_id")
}

model server_config {
  config_id    Int       @id @default(autoincrement())
  server_id    Int
  config_name  String    @db.VarChar(100)
  config_value String
  last_updated DateTime? @default(now()) @db.Timestamp(6)
  servers      servers   @relation(fields: [server_id], references: [server_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([server_id], map: "idx_config_server_id")
}

model servers {
  server_id     Int             @id @default(autoincrement())
  server_name   String          @db.VarChar(100)
  ip_address    String          @db.VarChar(45)
  port          Int
  rcon_pass     String          @db.VarChar(100)
  max_players   Int?
  game_mode     String?         @db.VarChar(50)
  map           String?         @db.VarChar(100)
  status        String          @default("Offline") @db.VarChar(20)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  last_updated  DateTime?       @default(now()) @db.Timestamp(6)
  server_config server_config[]

  @@index([ip_address, port], map: "idx_server_ip_port")
}
